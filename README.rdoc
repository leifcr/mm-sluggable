= MongoMapper::Plugins::Sluggable

Add slugs to your fields. And use it for URLS...

== Usage

Either load it into all models, or individual models:

Add to all models
  #initializers/mongo.rb
  MongoMapper::Document.plugin(MongoMapper::Plugins::Sluggable)

Add to a specific model
  #app/models/my_model.rb
  plugin MongoMapper::Plugins::Sluggable

Then call sluggable to configure it
  sluggable :title, :scope => :account_id

NOTE: The slugs will always be updated if you change the field it creates 
the slugs from. see options to change behaviour

Free slugs will be reused
Example: you have my-title-1 and my-title-3 creating a new slug will generate my-title-2

  Why always change slugs? Feels better to have same slug as title...

== Improve performance on your models

This is important to get fast queries! (you will regret if you don't add it...)

Read up on indexes here:
https://github.com/jnunemaker/mongomapper/issues/337

Easiest is to add db/indexes.rb to your app, then add this to that file:
  # db/indexes.rb
  MyModel.ensure_index(:slug_key)
  
== Options

Available options are:

* :scope - scope to a specific field (default - nil)
* :key - what the slug key is called (default - :slug) - NOTE, don't change this one
* :method - what method to call on the field to sluggify it (default - :parameterize)
* :callback - when to trigger the slugging (default - :before_validation_on_create)
* :always_update - Always update the slug on update/save/create etc.

Eg.

  sluggable :title, :scope => :account_id, :key => :title_slug, :method => :to_url, :index => false
  
This will slug the title to the title_slug key, scoped to the account, will use String#to_url to slug it and won't add an index to the key

== Versioning

If an item with the same slug exists, it will add a version number to the slug.

IE assuming we already have an item with the slug of "monkey", the slug will be generated as "monkey-1"

== Note on Patches/Pull Requests

* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a future version unintentionally.
* Commit, do not mess with rakefile, version, or history. (if you want to have your own version, that is fine but bump version in a commit by itself in another branch so I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Install
Bundler: (You are most likely using bundler in your app...)
  gem 'mm-sluggable', :git => 'http://github.com/luuf/mm-sluggable.git'

== Copyright

See LICENSE for details.